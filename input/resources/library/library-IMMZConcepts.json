{
  "resourceType": "Library",
  "id": "library-IMMZConcepts",
  "extension": [ {
    "url": "http://hl7.org/fhir/us/cqfmeasures/StructureDefinition/cqfm-softwaresystem",
    "valueReference": {
      "reference": "Device/cqf-tooling"
    }
  } ],
  "url": "http://fhir.org/guides/who/core/Library/IMMZConcepts",
  "name": "IMMZConcepts",
  "relatedArtifact": [ {
    "type": "depends-on",
    "display": "Code system ICD-10",
    "resource": "http://hl7.org/fhir/sid/icd-10"
  }, {
    "type": "depends-on",
    "display": "Code system SNOMED-CT",
    "resource": "http://snomed.info/sct"
  }, {
    "type": "depends-on",
    "display": "Code system LOINC",
    "resource": "http://loinc.org"
  }, {
    "type": "depends-on",
    "display": "Code system RxNorm",
    "resource": "http://www.nlm.nih.gov/research/umls/rxnorm"
  }, {
    "type": "depends-on",
    "display": "Code system CIEL",
    "resource": "http://hl7.org/fhir/sid/ciel"
  }, {
    "type": "depends-on",
    "display": "Code system ICD-11",
    "resource": "http://hl7.org/fhir/sid/icd-11"
  }, {
    "type": "depends-on",
    "display": "Code system ICHI",
    "resource": "https://mitel.dimi.uniud.it/ichi/#http://id.who.int/ichi"
  }, {
    "type": "depends-on",
    "display": "Code system ICF",
    "resource": "http://hl7.org/fhir/sid/icf-nl"
  }, {
    "type": "depends-on",
    "display": "Code system Extended Codes CodeSystem codes",
    "resource": "http://fhir.org/guides/who/anc-cds/CodeSystem/anc-custom-codes"
  }, {
    "type": "depends-on",
    "display": "Value set WHO ATC",
    "resource": "http://hl7.org/fhir/uv/ips/ValueSet/whoatc-uv-ips"
  }, {
    "type": "depends-on",
    "display": "Value set Negative Result",
    "resource": "http://fhir.org/guides/who/smart-immunization/ValueSet/negativetestresult-values"
  }, {
    "type": "depends-on",
    "display": "Value set Positive Result",
    "resource": "http://fhir.org/guides/who/smart-immunization/ValueSet/PositiveTestResult-values"
  }, {
    "type": "depends-on",
    "display": "Value set CD4% Test Result",
    "resource": "http://fhir.org/guides/who/smart-immunization/ValueSet/CD4percentageTest-values"
  }, {
    "type": "depends-on",
    "display": "Value set CD4 Count Test Result",
    "resource": "http://fhir.org/guides/who/smart-immunization/ValueSet/CD4CountTestResult-values"
  }, {
    "type": "depends-on",
    "display": "Value set Immunocompromised",
    "resource": "http://fhir.org/guides/who/smart-immunization/ValueSet/Immunocompromised-values"
  }, {
    "type": "depends-on",
    "display": "Value set Patient birth weight observation value",
    "resource": "http://fhir.org/guides/who/smart-immunization/ValueSet/Birthweight-values"
  }, {
    "type": "depends-on",
    "display": "Value set Seronegative",
    "resource": "http://fhir.org/guides/who/smart-immunization/ValueSet/Seronegative-values"
  }, {
    "type": "depends-on",
    "display": "Value set PretermBirth",
    "resource": "http://fhir.org/guides/who/smart-immunization/ValueSet/Preterm-values"
  }, {
    "type": "depends-on",
    "display": "Value set HIV status",
    "resource": "http://fhir.org/guides/who/anc-cds/ValueSet/anc-b9-de45"
  }, {
    "type": "depends-on",
    "display": "Value set HIV status - HIV positive Choices",
    "resource": "http://fhir.org/guides/who/anc-cds/ValueSet/anc-b9-de46"
  }, {
    "type": "depends-on",
    "display": "Value set HIV status - HIV negative Choices",
    "resource": "http://fhir.org/guides/who/anc-cds/ValueSet/anc-b9-de47"
  }, {
    "type": "depends-on",
    "display": "Value set TST Test Result",
    "resource": "http://fhir.org/guides/who/smart-immunization/ValueSet/TSTTestResult-values"
  }, {
    "type": "depends-on",
    "display": "Value set IGRA Test Result",
    "resource": "http://fhir.org/guides/who/smart-immunization/ValueSet/IGRATestResult-values"
  }, {
    "type": "depends-on",
    "display": "Value set ARV Drugs",
    "resource": "http://fhir.org/guides/who/smart-immunization/ValueSet/ARVDrugs-values"
  }, {
    "type": "depends-on",
    "display": "Value set VNA levels",
    "resource": "http://fhir.org/guides/who/smart-immunization/ValueSet/VNAlevelsRAbies-values"
  }, {
    "type": "depends-on",
    "display": "Value set Inactivated Vero cell-derived Japanese Encephalitis vaccines",
    "resource": "http://fhir.org/guides/who/smart-immunization/ValueSet/InactivatedJE-values"
  }, {
    "type": "depends-on",
    "display": "Value set Target Disease",
    "resource": "http://hl7.org/fhir/ValueSet/immunization-target-disease"
  }, {
    "type": "depends-on",
    "display": "Value set BCG Vaccine",
    "resource": "http://fhir.org/guides/who/smart-immunize/ValueSet/IMMZ.A1.DE1"
  }, {
    "type": "depends-on",
    "display": "Value set Cholera Vaccine",
    "resource": "http://fhir.org/guides/who/smart-immunize/ValueSet/IMMZ.A1.DE2"
  }, {
    "type": "depends-on",
    "display": "Value set Diphtheria Vaccine",
    "resource": "http://fhir.org/guides/who/smart-immunize/ValueSet/IMMZ.A1.DE3"
  }, {
    "type": "depends-on",
    "display": "Value set Hib Vaccine",
    "resource": "http://fhir.org/guides/who/smart-immunize/ValueSet/IMMZ.A1.DE4"
  }, {
    "type": "depends-on",
    "display": "Value set HepA Vaccine",
    "resource": "http://fhir.org/guides/who/smart-immunize/ValueSet/IMMZ.A1.DE5"
  }, {
    "type": "depends-on",
    "display": "Value set HepB Vaccine",
    "resource": "http://fhir.org/guides/who/smart-immunize/ValueSet/IMMZ.A1.DE6"
  }, {
    "type": "depends-on",
    "display": "Value set HPV Vaccine",
    "resource": "http://fhir.org/guides/who/smart-immunize/ValueSet/IMMZ.A1.DE7"
  }, {
    "type": "depends-on",
    "display": "Value set Japanese Encephalitis Vaccine",
    "resource": "http://fhir.org/guides/who/smart-immunize/ValueSet/IMMZ.A1.DE8"
  }, {
    "type": "depends-on",
    "display": "Value set MCV Vaccine",
    "resource": "http://fhir.org/guides/who/smart-immunize/ValueSet/IMMZ.A1.DE9"
  }, {
    "type": "depends-on",
    "display": "Value set Meningococcal Vaccine",
    "resource": "http://fhir.org/guides/who/smart-immunize/ValueSet/IMMZ.A1.DE10"
  }, {
    "type": "depends-on",
    "display": "Value set Mumps Vaccine",
    "resource": "http://fhir.org/guides/who/smart-immunize/ValueSet/IMMZ.A1.DE11"
  }, {
    "type": "depends-on",
    "display": "Value set Pertussis Vaccine",
    "resource": "http://fhir.org/guides/who/smart-immunize/ValueSet/IMMZ.A1.DE12"
  }, {
    "type": "depends-on",
    "display": "Value set Pneumococcal Vaccine",
    "resource": "http://fhir.org/guides/who/smart-immunize/ValueSet/IMMZ.A1.DE13"
  }, {
    "type": "depends-on",
    "display": "Value set Polio Vaccine",
    "resource": "http://fhir.org/guides/who/smart-immunize/ValueSet/IMMZ.A1.DE14"
  }, {
    "type": "depends-on",
    "display": "Value set Rabies Vaccine",
    "resource": "http://fhir.org/guides/who/smart-immunize/ValueSet/IMMZ.A1.DE15"
  }, {
    "type": "depends-on",
    "display": "Value set Rotavirus Vaccine",
    "resource": "http://fhir.org/guides/who/smart-immunize/ValueSet/IMMZ.A1.DE16"
  }, {
    "type": "depends-on",
    "display": "Value set Rubella Vaccine",
    "resource": "http://fhir.org/guides/who/smart-immunize/ValueSet/IMMZ.A1.DE17"
  }, {
    "type": "depends-on",
    "display": "Value set Seasonal Influenza Vaccine",
    "resource": "http://fhir.org/guides/who/smart-immunize/ValueSet/IMMZ.A1.DE18"
  }, {
    "type": "depends-on",
    "display": "Value set Tetanus Vaccine",
    "resource": "http://fhir.org/guides/who/smart-immunize/ValueSet/IMMZ.A1.DE19"
  }, {
    "type": "depends-on",
    "display": "Value set Typhoid Vaccine",
    "resource": "http://fhir.org/guides/who/smart-immunize/ValueSet/IMMZ.A1.DE21"
  }, {
    "type": "depends-on",
    "display": "Value set TBE Vaccine",
    "resource": "http://fhir.org/guides/who/smart-immunize/ValueSet/IMMZ.A1.DE20"
  }, {
    "type": "depends-on",
    "display": "Value set Varicella Vaccine",
    "resource": "http://fhir.org/guides/who/smart-immunize/ValueSet/IMMZ.A1.DE22"
  }, {
    "type": "depends-on",
    "display": "Value set Yellow Fever Vaccine",
    "resource": "http://fhir.org/guides/who/smart-immunize/ValueSet/IMMZ.A1.DE23"
  }, {
    "type": "depends-on",
    "display": "Value set DTP Vaccine",
    "resource": "http://fhir.org/guides/who/smart-immunize/ValueSet/IMMZ.A1.DE24"
  }, {
    "type": "depends-on",
    "display": "Value set Inactivated Polio Vaccine",
    "resource": "http://fhir.org/guides/who/smart-immunize/ValueSet/IMMZ.A1.DE25"
  }, {
    "type": "depends-on",
    "display": "Value set Oral Polio Vaccine",
    "resource": "http://fhir.org/guides/who/smart-immunize/ValueSet/IMMZ.A1.DE26"
  }, {
    "type": "depends-on",
    "display": "Value set Dengue Vaccine",
    "resource": "http://fhir.org/guides/who/smart-immunize/ValueSet/IMMZ.A1.DE27"
  }, {
    "type": "depends-on",
    "display": "Value set Inactivated HAV",
    "resource": "http://fhir.org/guides/who/smart-immunize/ValueSet/IMMZ.A1.DE28"
  }, {
    "type": "depends-on",
    "display": "Value set WC Class Cholera Vaccine",
    "resource": "http://fhir.org/guides/who/smart-immunization/ValueSet/WCClassCholeraVaccine-values"
  }, {
    "type": "depends-on",
    "display": "Value set WC-rBS Class Cholera Vaccine",
    "resource": "http://fhir.org/guides/who/smart-immunization/ValueSet/WC-rBSClassCholeraVaccine-values"
  }, {
    "type": "depends-on",
    "display": "Value set ViPS Class Typhoid Vaccine",
    "resource": "http://fhir.org/guides/who/smart-immunization/ValueSet/ViPSClassTyphoidVaccine-values"
  }, {
    "type": "depends-on",
    "display": "Value set Ty21a Class Typhoid Vaccine",
    "resource": "http://fhir.org/guides/who/smart-immunization/ValueSet/Ty21aClassTyphoidVaccine-values"
  }, {
    "type": "depends-on",
    "display": "Value set MenA conjugate vaccine (5Âµg)",
    "resource": "http://fhir.org/guides/who/smart-immunization/ValueSet/MenAconjugatevaccine-values"
  }, {
    "type": "depends-on",
    "display": "Value set monovalent MenC conjugate",
    "resource": "http://fhir.org/guides/who/smart-immunization/ValueSet/monovalentMenCconjugate-values"
  }, {
    "type": "depends-on",
    "display": "Value set Quadrivalent conjugate",
    "resource": "http://fhir.org/guides/who/smart-immunization/ValueSet/Quadrivalentconjugate-values"
  }, {
    "type": "depends-on",
    "display": "Value set FSME-Immun Class TBE Vaccine",
    "resource": "http://fhir.org/guides/who/smart-immunization/ValueSet/FSME-ImmunClassTBEVaccine-values"
  }, {
    "type": "depends-on",
    "display": "Value set TBE-Moscow Class TBE Vaccine",
    "resource": "http://fhir.org/guides/who/smart-immunization/ValueSet/TBE-MoscowClassTBEVaccine-values"
  }, {
    "type": "depends-on",
    "display": "Value set EnceVir Class TBE Vaccine",
    "resource": "http://fhir.org/guides/who/smart-immunization/ValueSet/EnceVirClassTBEVaccine-values"
  }, {
    "type": "depends-on",
    "display": "Value set Encepur Class TBE Vaccine",
    "resource": "http://fhir.org/guides/who/smart-immunization/ValueSet/EncepurClassTBEVaccine-values"
  } ],
  "content": [ {
    "contentType": "text/cql",
    "data": ""
  }, {
    "contentType": "application/elm+xml",
    "data": ""
  }, {
    "contentType": "application/elm+json",
    "data": ""
  } ]
}